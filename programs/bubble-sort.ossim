;The towers of hanoi
;@author Hussachai Puripunpinyo

START	RD,  R5			;get the number of values to sort
	GTR, R5			;if input <= 0
	HLT			;then do nothing
	STR, R5, NUM		;save it in memory
	COM, R5			;
	ADD, R5, ONE		;convert num to -num using two's complement
	STR, R5, INUM
GETS	RD,  R5			;
	LD,  R4, IDX		;load index from memory to R4
	STR, R5			;store the number to array based on index
	LD,  R5, NUM
	ADD, R5, DCR		;decrement number
	ADD, R4, ONE		;increment index
	STR, R4, IDX		;save index to memory
	LSE, R5, NUM		;if num > 0
	JMP,     GETS		;continue reading number

SORT	LD,  R5, DONE		
	NEQ, R5			;if done==true(0)
	JMP,     FINISH
	LD,  R5, ZERO
	STR, R5, DONE		;set done = false
WHILE	LD,  R5, DONE
	EQL, R5
	JMP,     FINISH
	LD,  R5, ONE		;done = true
	STR, R5, DONE		;
FOR	LD,  R4, I
	LD,  R5			;load value from array based on index
	STR, R5, TMP		;tmp = values[i]
	ADD, R4, DCR		
	LD,  R5, V0		;load value from array based on index-1
	COM, R5			;complement values[i-1]
	ADD, R5, ONE		;change values[i-1] to two's complement
	ADD, R5, TMP		;values[i-1] - values[i]
	LSS, R5			;if values[i-1] >= values[i] (r5>=0)
	JMP,     WHILE
	LD,  R5, ZERO
	STR, R5, DONE		;set done = false
	LD,  R5, V0		;load value from array based on index-1
	LD,  R4, I
	STR, R5			;values[i] = values[i-1]
	LD,  R5, TMP
	ADD, R4, DCR
	STR, R5, TMP		;values[i-1] = values[i]
	LD,  R4, I
	ADD, R4, ONE
	ADD, R4, INUM
	GRE, R4			;if(i<len(values)) then
	JMP,     FOR		
	JMP,     WHILE
FINISH  LD,  R4, NUM
	STR, R4, I
	LD,  R5, V0
	WR,  R5
	ADD, R4, DCR
	GRE, R4
	HLT
	JMP,     FINISH
NUM	DATA     000		;number of values to sort
INUM	DATA     000		;inum = -num
I	DATA     001		;loop variable
ONE	DATA     001		;constant 1
ZERO	DATA	 000		;constant 0
DCR	DATA     FFF		;constant -1
DONE	DATA     000		;boolean 0 or 1
TMP	DATA     000
SIZE	DATA     00A		;array size
IDX	DATA     000
;create array of values[10]
V0	DATA     000		;value0
V1	DATA     000		;value1
V2	DATA     000		;value2
V3	DATA     000		;value3
V4	DATA     000		;value4
V5	DATA     000		;value5
V6	DATA     000		;value6
V7	DATA     000		;value7
V8	DATA     000		;value8
V9	DATA     000		;value9


Array.prototype.bubblesort = function() {
    var done = false;
    while (!done) {
        done = true;
        for (var i = 1; i<this.length; i++) {
            if (this[i-1] > this[i]) {
                done = false;
                [this[i-1], this[i]] = [this[i], this[i-1]]
            }
        }
    }
    return this;
}
http://rosettacode.org/wiki/Sorting_algorithms/Bubble_sort#Java